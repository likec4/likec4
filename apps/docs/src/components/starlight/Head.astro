---
import Default from "@astrojs/starlight/components/Head.astro";

// const docs = await getCollection("docs");
// const routes = new Set(docs.map(({ data, slug }) => `${slug}.png`));

/**
 * Get the path to the OpenGraph image for a page
 * @param path Pathname of the page URL.
 * @param isFallback Whether or not this page is displaying fallback content.
 * @returns Path to the OpenGraph image if found. Otherwise, `undefined`.
 */
function getOgImageUrl(path: string): string | undefined {
	/**  All the OpenGraph image paths as generated by our `getStaticPaths`. */

	let imagePath = path.replace(/^\//, "").replace(/\/$/, "");
  if (imagePath === "") {
    imagePath = "index";
  }

	// if (isFallback) {
	// 	// Replace the language segment with 'en' for fallback pages.
	// 	imagePath = `en${imagePath.slice(imagePath.indexOf("/"))}`;
	// }

	// if (routes.has(imagePath))

	return `/og/${imagePath}.png`;
}

const ogImageUrl = getOgImageUrl(Astro.url.pathname);
const imageSrc = ogImageUrl ?? "/img/og-default.png?v=2";
// const canonicalImageSrc = new URL(imageSrc, Astro.url.origin);
const isHomepage = Astro.locals.starlightRoute.id === '';
---


<Default {...Astro.props}><slot /></Default>
<meta property="og:image" content={imageSrc} />
<meta name="twitter:image" content={imageSrc} />
