import { writeFileSync } from 'node:fs'
import { resolve, dirname } from 'node:path'

function viewOf(viewId, storyName = viewId) {
  const name = viewId.replace('_', '')
  return `
export const ${name} = LikeC4ViewStory.bind({})
${name}.storyName = "${storyName}"
${name}.args = {
  viewId: "${viewId}"
}`
}

const views = [
  'index',
  'customer',
  'cloud',
  'cloud_ui',
  'cloud_backend',
  'cloud_graphql',
  'cloud_cms',
  'amazon',
  'amazon_rds',
  'amazon_cognito',
  'premium',
  'themecolors',
  'themecolor_primary',
  'themecolor_secondary',
  'themecolor_muted',
  'themecolor_blue',
  'themecolor_sky',
  'themecolor_slate',
  'themecolor_gray',
  'themecolor_red',
  'themecolor_green',
  'themecolor_amber',
  'themecolor_indigo'
]

const __filename = new URL(import.meta.url).pathname
const __dirname = dirname(__filename)

let out = resolve(__dirname, '../src/stories/likec4--views.stories.tsx')

writeFileSync(out, `/* eslint-disable */
// DO NOT EDIT MANUALLY
// Auto-generated by
//  $ yarn generate:stories

import { LikeC4ViewStory } from './likec4'

${views
  .filter(view => !view.startsWith('themecolor'))
  .map(v => viewOf(v))
  .join('\n')}
`)

console.log(`Generated ${out}`)

out = resolve(__dirname, '../src/stories/likec4--theme-colors.stories.tsx')

writeFileSync(out, `/* eslint-disable */
// DO NOT EDIT MANUALLY
// Auto-generated by
//  $ yarn generate:stories

import { LikeC4ViewStory } from './likec4'

${views
  .filter(view => view.startsWith('themecolor'))
  .map(v => viewOf(v, v === 'themecolors' ? 'all' : v.substring(11)))
  .join('\n')}
`)

console.log(`Generated ${out}`)
