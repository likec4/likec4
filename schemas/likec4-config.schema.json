{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "LikeC4 project configuration",
  "type": "object",
  "properties": {
    "name": {
      "description": "Project name, must be unique in the workspace",
      "type": "string",
      "minLength": 1
    },
    "title": {
      "description": "A human readable title for the project",
      "type": "string",
      "minLength": 1
    },
    "contactPerson": {
      "description": "A person who has been involved in creating or maintaining this project",
      "type": "string",
      "minLength": 1
    },
    "imageAliases": {
      "description": "Map of image alias prefixes to relative paths (keys must match /^@\\w+$/; values must be relative paths without protocol or leading slash).",
      "type": "object",
      "propertyNames": {
        "type": "string"
      },
      "additionalProperties": {
        "type": "string",
        "minLength": 1,
        "pattern": "^(?!\\/|[A-Za-z]:[\\\\\\/])(?!.*:\\/\\/).*$"
      }
    },
    "styles": {
      "$ref": "#/$defs/StylesConfiguration"
    },
    "exclude": {
      "description": "List of file patterns to exclude from the project, default is [\"**/node_modules/**\"]",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "manualLayouts": {
      "$ref": "#/$defs/manual-layouts-config"
    }
  },
  "required": [
    "name"
  ],
  "$defs": {
    "StylesConfiguration": {
      "id": "StylesConfiguration",
      "description": "Project styles customization",
      "type": "object",
      "properties": {
        "theme": {
          "$ref": "#/$defs/ThemeCustomization"
        },
        "defaults": {
          "$ref": "#/$defs/DefaultStyleValues"
        }
      },
      "additionalProperties": false
    },
    "ThemeCustomization": {
      "id": "ThemeCustomization",
      "description": "Theme customization",
      "type": "object",
      "properties": {
        "colors": {
          "$ref": "#/$defs/ThemeColors"
        },
        "sizes": {
          "$ref": "#/$defs/ThemeSizes"
        }
      },
      "additionalProperties": false
    },
    "ThemeColors": {
      "id": "ThemeColors",
      "description": "Override theme colors",
      "anyOf": [
        {
          "type": "object",
          "propertyNames": {
            "$ref": "#/$defs/ColorName"
          },
          "additionalProperties": {
            "$ref": "#/$defs/ThemeColorValues"
          }
        },
        {
          "type": "object",
          "properties": {
            "amber": {
              "$ref": "#/$defs/ThemeColorValues"
            },
            "blue": {
              "$ref": "#/$defs/ThemeColorValues"
            },
            "gray": {
              "$ref": "#/$defs/ThemeColorValues"
            },
            "slate": {
              "$ref": "#/$defs/ThemeColorValues"
            },
            "green": {
              "$ref": "#/$defs/ThemeColorValues"
            },
            "indigo": {
              "$ref": "#/$defs/ThemeColorValues"
            },
            "muted": {
              "$ref": "#/$defs/ThemeColorValues"
            },
            "primary": {
              "$ref": "#/$defs/ThemeColorValues"
            },
            "red": {
              "$ref": "#/$defs/ThemeColorValues"
            },
            "secondary": {
              "$ref": "#/$defs/ThemeColorValues"
            },
            "sky": {
              "$ref": "#/$defs/ThemeColorValues"
            }
          }
        }
      ]
    },
    "ColorName": {
      "id": "ColorName",
      "anyOf": [
        {
          "$ref": "#/$defs/ThemeColor"
        },
        {
          "type": "string",
          "minLength": 1
        }
      ]
    },
    "ThemeColor": {
      "id": "ThemeColor",
      "type": "string",
      "enum": [
        "amber",
        "blue",
        "gray",
        "slate",
        "green",
        "indigo",
        "muted",
        "primary",
        "red",
        "secondary",
        "sky"
      ]
    },
    "ThemeColorValues": {
      "id": "ThemeColorValues",
      "description": "Exact value (hex, rgb, rgba, hsl, hsla ...) or break down of specific color values",
      "anyOf": [
        {
          "$ref": "#/$defs/ColorLiteral"
        },
        {
          "type": "object",
          "properties": {
            "elements": {
              "description": "Element color value (or a breakdown of specific color values)",
              "anyOf": [
                {
                  "$ref": "#/$defs/ColorLiteral"
                },
                {
                  "$ref": "#/$defs/ElementColorValues"
                }
              ]
            },
            "relationships": {
              "description": "Relationship color value (or a breakdown of specific color values)",
              "anyOf": [
                {
                  "$ref": "#/$defs/ColorLiteral"
                },
                {
                  "$ref": "#/$defs/RelationshipColorValues"
                }
              ]
            }
          },
          "required": [
            "elements",
            "relationships"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ColorLiteral": {
      "id": "ColorLiteral",
      "description": "Color value in any valid CSS format: hex, rgb, rgba, hsl, hsla ...",
      "type": "string",
      "minLength": 1
    },
    "ElementColorValues": {
      "id": "ElementColorValues",
      "type": "object",
      "properties": {
        "fill": {
          "description": "Background color",
          "$ref": "#/$defs/ColorLiteral"
        },
        "stroke": {
          "description": "Stroke color (border, paths above background)",
          "$ref": "#/$defs/ColorLiteral"
        },
        "hiContrast": {
          "description": "High contrast text color (title)",
          "$ref": "#/$defs/ColorLiteral"
        },
        "loContrast": {
          "description": "Low contrast text color (description)",
          "$ref": "#/$defs/ColorLiteral"
        }
      },
      "required": [
        "fill",
        "stroke",
        "hiContrast",
        "loContrast"
      ],
      "additionalProperties": false
    },
    "RelationshipColorValues": {
      "id": "RelationshipColorValues",
      "type": "object",
      "properties": {
        "line": {
          "description": "Line color",
          "$ref": "#/$defs/ColorLiteral"
        },
        "label": {
          "description": "Label text color",
          "$ref": "#/$defs/ColorLiteral"
        },
        "labelBg": {
          "description": "Label background color",
          "$ref": "#/$defs/ColorLiteral"
        }
      },
      "required": [
        "line",
        "label"
      ],
      "additionalProperties": false
    },
    "ThemeSizes": {
      "id": "ThemeSizes",
      "description": "Override theme sizes",
      "type": "object",
      "properties": {
        "xs": {
          "$ref": "#/$defs/Dimensions"
        },
        "sm": {
          "$ref": "#/$defs/Dimensions"
        },
        "md": {
          "$ref": "#/$defs/Dimensions"
        },
        "lg": {
          "$ref": "#/$defs/Dimensions"
        },
        "xl": {
          "$ref": "#/$defs/Dimensions"
        }
      },
      "additionalProperties": false
    },
    "Dimensions": {
      "id": "Dimensions",
      "description": "Dimensions",
      "type": "object",
      "properties": {
        "width": {
          "type": "number",
          "minimum": 50
        },
        "height": {
          "type": "number",
          "minimum": 50
        }
      },
      "required": [
        "width",
        "height"
      ],
      "additionalProperties": false
    },
    "DefaultStyleValues": {
      "id": "DefaultStyleValues",
      "description": "Override default values for style properties\nThese values will be used if such property is not defined",
      "type": "object",
      "properties": {
        "color": {
          "description": "Default color for elements\n(must be a valid color name from the theme)",
          "$ref": "#/$defs/ColorName"
        },
        "opacity": {
          "description": "Default opacity (0-100%) for elements when displayed as a group (like a container)",
          "$ref": "#/$defs/Opacity"
        },
        "border": {
          "description": "Default border style for elements when displayed as a group (like a container)",
          "$ref": "#/$defs/BorderStyle"
        },
        "size": {
          "description": "Default size for elements",
          "$ref": "#/$defs/ElementSize"
        },
        "shape": {
          "description": "Default shape for elements",
          "$ref": "#/$defs/ElementShape"
        },
        "group": {
          "description": "Default style values for groups",
          "$ref": "#/$defs/GroupDefaultStyleValues"
        },
        "relationship": {
          "description": "Default style values for relationships",
          "$ref": "#/$defs/RelationshipDefaultStyleValues"
        }
      },
      "additionalProperties": false
    },
    "Opacity": {
      "id": "Opacity",
      "description": "Opacity 0-100%",
      "type": "integer",
      "minimum": 0,
      "maximum": 100
    },
    "BorderStyle": {
      "id": "BorderStyle",
      "type": "string",
      "enum": [
        "solid",
        "dashed",
        "dotted",
        "none"
      ]
    },
    "ElementSize": {
      "id": "ElementSize",
      "type": "string",
      "enum": [
        "xs",
        "sm",
        "md",
        "lg",
        "xl"
      ]
    },
    "ElementShape": {
      "id": "ElementShape",
      "type": "string",
      "enum": [
        "rectangle",
        "person",
        "browser",
        "mobile",
        "cylinder",
        "storage",
        "queue"
      ]
    },
    "GroupDefaultStyleValues": {
      "id": "GroupDefaultStyleValues",
      "description": "Override default values for group style properties\nThese values will be used if such property is not defined",
      "type": "object",
      "properties": {
        "color": {
          "description": "Default color for groups\n(must be a valid color name from the theme)",
          "$ref": "#/$defs/ColorName"
        },
        "opacity": {
          "description": "Default opacity for groups",
          "$ref": "#/$defs/Opacity"
        },
        "border": {
          "description": "Default border for groups",
          "$ref": "#/$defs/BorderStyle"
        }
      },
      "additionalProperties": false
    },
    "RelationshipDefaultStyleValues": {
      "id": "RelationshipDefaultStyleValues",
      "description": "Override default values for relationship style properties\nThese values will be used if such property is not defined",
      "type": "object",
      "properties": {
        "color": {
          "description": "Default color for relationships\n(must be a valid color name from the theme)",
          "$ref": "#/$defs/ColorName"
        },
        "line": {
          "description": "Default line style for relationships",
          "$ref": "#/$defs/LineType"
        },
        "arrow": {
          "description": "Default arrow style for relationships",
          "$ref": "#/$defs/ArrowType"
        }
      },
      "additionalProperties": false
    },
    "LineType": {
      "id": "LineType",
      "type": "string",
      "enum": [
        "dashed",
        "solid",
        "dotted"
      ]
    },
    "ArrowType": {
      "id": "ArrowType",
      "type": "string",
      "enum": [
        "none",
        "normal",
        "onormal",
        "dot",
        "odot",
        "diamond",
        "odiamond",
        "crow",
        "open",
        "vee"
      ]
    },
    "manual-layouts-config": {
      "id": "manual-layouts-config",
      "description": "Configuration for manual layouts",
      "type": "object",
      "properties": {
        "outDir": {
          "description": "Path to the directory where manual layouts will be stored, relative to the folder containing the project config",
          "type": "string"
        }
      },
      "required": [
        "outDir"
      ]
    }
  }
}