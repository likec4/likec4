name: docs

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      preview_url:
        description: "deployment url for preview"
        value: ${{ jobs.deploy-docs-preview.outputs.url }}
      production_url:
        description: "deployment url for production"
        value: ${{ jobs.deploy-docs-prod.outputs.url }}
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy to'
        required: true
        default: 'preview'
        type: choice
        options:
        - preview
        - production

permissions:
  actions: write
  contents: read
  checks: write
  statuses: write
  deployments: write

env:
  NODE_ENV: production

concurrency:
  group: docs-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build-docs:
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: bootstrap
        uses: ./.github/actions/bootstrap

      - name: typecheck
        run: |
          yarn turbo run typecheck --filter='@likec4/docs-astro'

      - name: build
        run: |
          yarn turbo run build --filter='@likec4/docs-astro'

      - name: upload a build artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4
        with:
          name: docs-astro
          if-no-files-found: error
          retention-days: 5
          path: apps/docs/dist/

  deploy-docs-preview:
    # Deploy to Preview
    if: "inputs.environment == 'preview' || github.event_name != 'workflow_dispatch'"
    name: deploy preview
    runs-on: ubuntu-latest
    needs: build-docs
    timeout-minutes: 10
    environment:
      name: 'docs-preview'
      url: ${{ steps.cloudflare.outputs.deployment-url }}
    outputs:
      url: ${{ steps.cloudflare.outputs.deployment-url }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ github.ref }}

      - name: setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: download artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: docs-astro
          path: apps/docs/dist/

      - id: cloudflare
        name: publish to cloudflare
        uses: cloudflare/wrangler-action@b2a0191ce60d21388e1a8dcc968b4e9966f938e1 # v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy dist --project-name likec4-docs-astro --commit-dirty --branch preview
          workingDirectory: apps/docs
          packageManager: yarn

  deploy-docs-prod:
    if: "inputs.environment == 'production' || (github.event_name != 'workflow_dispatch' && contains(github.event.head_commit.message, 'chore: release'))"
    name: deploy prod
    runs-on: ubuntu-latest
    needs: build-docs
    timeout-minutes: 10
    environment:
      name: 'docs-prod'
      url: ${{ steps.cloudflare.outputs.deployment-url }}
    outputs:
      url: ${{ steps.cloudflare.outputs.deployment-url }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ github.ref }}

      - name: setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: download artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: docs-astro
          path: apps/docs/dist/

      - id: cloudflare
        name: publish to cloudflare
        uses: cloudflare/wrangler-action@b2a0191ce60d21388e1a8dcc968b4e9966f938e1 # v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy dist --project-name likec4-docs-astro --commit-dirty --branch main
          workingDirectory: apps/docs
          packageManager: yarn
