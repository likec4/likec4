name: release

on:
  workflow_call:
  # workflow_dispatch:
  # push:
  #   branches:
  #     - "fix-release"

permissions:
  actions: write
  checks: write
  contents: write
  statuses: write

env:
  NODE_ENV: production
  CLOUDFLARE_ENV: production
  FORCE_COLOR: true
  DO_NOT_TRACK: "1"

jobs:
  publish-release:
    name: publish
    runs-on: ubuntu-24.04-arm
    timeout-minutes: 5
    if: ${{ github.repository_owner == 'likec4' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Decode the GitHub App Private Key
        id: decode
        run: |
          private_key=$(echo "${{ secrets.BOT_APP_PRIVATE_KEY }}" | base64 -d | awk 'BEGIN {ORS="\\n"} {print}' | head -c -2) &> /dev/null
          echo "::add-mask::$private_key"
          echo "private-key=$private_key" >> "$GITHUB_OUTPUT"

      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ steps.decode.outputs.private-key }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

      - name: üõ†Ô∏è bootstrap
        uses: ./.github/actions/bootstrap

      - name: ‚öôÔ∏è build
        run: pnpm ci:build

      - name: release
        run: pnpm shipjs trigger
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
