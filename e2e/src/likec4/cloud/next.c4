model {

  extend amazon.rds {
    aurora = component 'Aurora' {
      #db
      description 'Aurora RDS'
      style {
        icon tech:mysql
        shape storage
        color secondary
      }

      tblUsers = table 'Users Table' {
        #next
        description '
          Table with registered users.
          Contains references to Identity provider.
        '
        style {
          shape storage
          color secondary
        }
      }
    }
  }

  extend cloud.next {

    backend = app 'Backend V2' {
      #api
      icon tech:nestjs
      description 'The next version of backend'
    }

    graphql = component 'GraphQL' {
      #next, #api
      description '
        GraphQL API for the backend
        Uses Apollo Server
      '
      icon tech:graphql

      gqlQuery myAccount {
        description '
          Returns the account of the authenticated user
        '

        -> backend 'reads'
      }
      gqlMutation updateAccount {
        description '
          If requested by customer, updates only its own account
          Support user updates any account
        '

        -> backend 'writes'
      }
    }

    backend -> aurora.tblUsers 'reads/writes' {
      navigateTo cloud-to-amazon
    }
    backend -> cloud.legacy.backend.services 'calls legacy'

    events = component 'Events Manager' {
      -> amazon.queue1 {
        title 'publishes events'
        technology 'JSON'
        navigateTo cloud-to-amazon
      }
      -> amazon.queue2 {
        title 'publishes events'
        technology 'proto'
        navigateTo cloud-to-amazon
      }
    }
    events -> amazon.sqs 'publishes events' {
      navigateTo cloud-to-amazon
    }

    backend -> events "emits"
  }

}

views {

  view cloud_next of cloud.next {
    include cloud.ui

    group {
      include *
    }

    include
        amazon._,
        cloud.* -> amazon.* with {
          color indigo
          line solid
        }

    exclude
      cloud.ui -> amazon

    style * {
      color slate
    }
    style cloud.next._ {
      color primary
      border none
      opacity 10%
    }
    style amazon._ {
      color amber
      opacity 20%
    }
  }

  view backend of backend {
    include
      *,
      cloud,
      cloud.*
    exclude
      cloud.ui,
      cloud.supportUser

    style * {
      color muted
    }

    style backend {
      color primary
    }
  }

  view graphql of graphql {
    include *, cloud.next

    style * {
      color muted
    }

    style graphql, graphql.* {
      color primary
    }
  }

}
