model {

  customer = actor 'Cloud Customer' {
    description 'The regular customer of the system'
  }

  cloud = softwareSystem 'Cloud System' {
    description '
      Our SaaS platfrom that allows
      customers to interact with
      the latest technologies
    '
    link https://github.com/likec4/likec4

    ui = container 'Frontend' {
      #v1
      description '
        All the frontend applications
        of the cloud system
      '
      link https://react.dev
      metadata {
        attr1 'value 1'
        attr2 '
          multiline
          value
        '
      }
      style {
        shape browser
      }


      dashboard = app 'Customer Dashboard' {
        technology 'Nextjs'
        description 'Web application, that allows customers to interact with the cloud system'
        style {
          shape browser
          icon https://icon.icepanel.io/Technology/png-shadow-512/Next.js.png
        }

        -> amazon.cognito 'authenticate'
        -> backend.graphql 'fetch data' {
          #v1 #v2
          technology 'graphql'
          link https://react.dev 'docs'

          link /view/1231
        }
      }
      customer -> dashboard 'open in browser'

      mobile = mobile 'Mobile App' {
        description 'The mobile app of the cloud system'
        -> amazon.cognito 'authenticate'
        -> backend.graphql 'fetch data' #v2
      }
      customer -> mobile 'open on mobile device'
    }

    backend = container 'Backend' {
      #next #v2
      description 'The backend services of the cloud system'
      link ./cloud/backend.c4#L3
      icon tech:nodejs
    }

    reporting = service 'Reporting' {
      #next #v2
      technology 'PowerBI'
      description 'Reporting services'
      link https://github.com/likec4/likec4 'source'
      link /view/reporting/editor
      link ./cloud/reporting.c4#L3
      icon ./images/report.svg
    }

    data = container 'Data Services' {
      #next #v2
      description '
        Data storage
        and data processing
      '
      icon ./images/data-services.svg
    }

    billing = service 'Billing' {
      #v1
      description '
        Billing services, process
        payments and subscriptions
      '
    }

    backoffice = service 'Back Office' {
      #v2
      description '
        Back office services,
        providing tenant management,
        customer support and billing
      '
      style {
        shape browser
      }
    }
  }

  customer -> cloud 'use and pay'
  cloud -> amazon 'use services'
}

views {

  view index {
    title 'Landscape'
    link https://github.com/likec4/likec4

    include *
  }

  view customer of customer {
    title '[context] Customer'
    include
      *,
      cloud,
      -> ui.*
    style cloud {
      color muted
    }
    style customer {
      color green
    }
  }

  view cloud of cloud {
    #v1
    title '[system] Cloud'
    description '
      Some description with
      multi-lines
    '

    link https://likec4.dev/
    link https://github.com/likec4/likec4
    link https://github.com/likec4/actions

    include *
    style cloud, cloud.* {
      color green
    }
  }

  view cloud_ui of ui {
    #v2 #next
    title '[context] Cloud UI'
    link ./model.c4#L127

    include
      *,
      cloud,
    //ui -> amazon.*,
    //backend ->

    style * {
      color secondary
    }
    style cloud {
      color muted
    }
    style ui._ {
      color green
    }
    style amazon._ {
      color amber
    }
  }

  view cloud_backend of backend {
    title '[context] Cloud Backend'
    include
      cloud,
      amazon,
      *,
      backend -> amazon.*

    style * {
      color secondary
    }
    style cloud, amazon {
      color muted
    }

    style backend, backend.* {
      color green
    }
  }

}
